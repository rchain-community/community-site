{"version":3,"sources":["webpack:///./src/pages/docs/v1/02-SDK/07-constants.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"gRAMO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,+FACA,uBAAK,kCAAMC,WAAW,OAAU,CAC5B,UAAa,wBADZ,+hDA4DTJ,EAAWK,gBAAiB","file":"component---src-pages-docs-v-1-02-sdk-07-constants-md-c49a39bb6d8998c16564.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/communty-site/communty-site/src/layouts/docs.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`Below is an exhaustive list of all external constants used in the SDK.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`import BigNumber from 'bignumber.js'\n\nimport ERC20 from './abis/ERC20.json'\nimport FACTORY from './abis/FACTORY.json'\nimport EXCHANGE from './abis/EXCHANGE.json'\n\nexport const ETH = 'ETH'\n\nexport enum SUPPORTED_CHAIN_ID {\n  Mainnet = 1,\n  Ropsten = 3,\n  Rinkeby = 4,\n  Kovan = 42\n}\n\nexport const FACTORY_ADDRESS: { [key: number]: string } = {}\n\nexport const FACTORY_ABI: string = JSON.stringify(FACTORY)\nexport const EXCHANGE_ABI: string = JSON.stringify(EXCHANGE)\n\nexport enum TRADE_TYPE {\n  ETH_TO_TOKEN = 'ETH_TO_TOKEN',\n  TOKEN_TO_ETH = 'TOKEN_TO_ETH',\n  TOKEN_TO_TOKEN = 'TOKEN_TO_TOKEN'\n}\n\nexport enum TRADE_EXACT {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT'\n}\n\nexport enum TRADE_METHODS {\n  ethToTokenSwapInput = 'ethToTokenSwapInput',\n  ethToTokenTransferInput = 'ethToTokenTransferInput',\n  ethToTokenSwapOutput = 'ethToTokenSwapOutput',\n  ethToTokenTransferOutput = 'ethToTokenTransferOutput',\n  tokenToEthSwapInput = 'tokenToEthSwapInput',\n  tokenToEthTransferInput = 'tokenToEthTransferInput',\n  tokenToEthSwapOutput = 'tokenToEthSwapOutput',\n  tokenToEthTransferOutput = 'tokenToEthTransferOutput',\n  tokenToTokenSwapInput = 'tokenToTokenSwapInput',\n  tokenToTokenTransferInput = 'tokenToTokenTransferInput',\n  tokenToTokenSwapOutput = 'tokenToTokenSwapOutput',\n  tokenToTokenTransferOutput = 'tokenToTokenTransferOutput'\n}\n\nexport const TRADE_METHOD_IDS: { [key: string]: string } = {}\n\nexport enum FIXED_UNDERFLOW_BEHAVIOR {\n  ZERO = 'ZERO',\n  LESS_THAN = 'LESS_THAN',\n  ONE_DIGIT = 'ONE_DIGIT'\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}